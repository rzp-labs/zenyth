name: SonarCloud Code Quality Analysis

on:
  push:
    branches:
      - main
      - integration-layer
      - 'feature/**'
      - 'phase-**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install UV package manager
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -e ".[dev]"

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest --cov=zenyth --cov-report=xml --cov-report=term-missing

      - name: Run code quality checks
        run: |
          source .venv/bin/activate
          # Format check
          black --check --diff src/ tests/
          # Linting
          ruff check src/ tests/
          # Type checking
          mypy src/
          # Security scanning
          bandit -r src/ -f json -o bandit-report.json || true

      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=rzp-labs_zenyth
            -Dsonar.organization=rzp-labs
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.xunit.reportPath=pytest-report.xml
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.language=py
            -Dsonar.python.version=3.10,3.11,3.12

  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: sonarcloud
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV and dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          uv venv
          source .venv/bin/activate
          uv pip install -e ".[dev]"

      - name: Run security checks
        run: |
          source .venv/bin/activate
          # Additional security scanning
          bandit -r src/ -f json -o bandit-security-report.json
          # Safety check for known vulnerabilities
          pip list --format=json | jq -r '.[] | "\(.name)==\(.version)"' > requirements-freeze.txt
          safety check -r requirements-freeze.txt --json --output safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-security-report.json
            safety-report.json
          retention-days: 30